version: "3.0"
services:
    servidor:
          build: 
              context: ../
              dockerfile: ./JbossServer/Dockerfile
          image: "jboss:desen"
          container_name: "jbossDesen"
          ports: 
            - "8080:8080"
            - "9990:9990"
            - "3200:3200"
            - "5000:5000"
        #  tty: true
          stdin_open: true
        # Adição do Commando para Iniciar o Servidor  
          command: /root/EAP-7.2.0/bin/./standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0 -Djboss.server.config.dir=/home/app/java/configuration/
          networks:
            rede: 
              ipv4_address: 172.20.0.6
    #sonarqube:
    #      build: 
    #         context: ../
    #         dockerfile: ./SonarQube/Dockerfile
    #      image: "sonarqube:desen"
    #      container_name: "sonarqubeDesen"
    #      #command: /home/desenv/sonarqube/sonarqube-9.7.1.62043/bin/linux-x86-64/./sonar.sh start
    #      tty: true
    #      stdin_open: true          
    #      ports: 
    #      - "9000:9000"
    #      networks: 
    #         rede:
    #           ipv4_address: 172.20.0.7
    pgdb:
        build: ../PostgreSQL
        image: "postgres:desen"
        container_name: "postgres_desen"
        tty: true
        stdin_open: true
        #command: postgres -D /etc/postgresql/data
        ports: 
           - "5432:5432"
        networks: 
             rede:
               ipv4_address: 172.20.0.9     
    front:
        build: ../Front-End
        image: "frontend:desen"
        container_name: "frontend_java"
        ##command: "git pull origin master"
        ports: 
           - "4200:4200"
        tty: true
        stdin_open: true  
        networks: 
             rede:
               ipv4_address: 172.20.0.8                        
    #nodejs:
    #     build: ../Nodejs - Servidor
    #     image: "nodejs:desen"
    #     container_name: "nodejs_desen"
    #     ports: 
    #        - "3000:3000"
    #     tty: true
    #     stdin_open: true  
    #     networks: 
    #          rede:
    #            ipv4_address: 172.20.0.10                      
    #mongodb:
    #     build: ../MongoDB
    #     image: "mongodb:desenv"
    #     container_name: "mongodb_desen"
    #     command: "mongod --bind_ip 172.20.0.11"
    #     tty: true
    #     stdin_open: true     
    #     networks: 
    #        rede:
    #            ipv4_address: 172.20.0.11  
    #python:
    #     build: ../Python
    #     image: "python:desenv"
    #     container_name: "python_desen"
    #     tty: true
    #     stdin_open: true  
    #     ports:
    #      - "7000:7000" 
    #     networks: 
    #        rede:
    #            ipv4_address: 172.20.0.12        
    #jenkins:
    #     build: 
    #         context: ../
    #         dockerfile: ./Jenkins/Dockerfile
    #     image: "jenkins:desenv"
    #     container_name: "jenkins_desen"
    #     command: "java -jar jenkins.war --httpPort=9101"
    #     tty: true
    #     stdin_open: true
    #     ports:
    #       - "9101:9101"
    #     networks: 
    #        rede:
    #            ipv4_address: 172.20.0.13    


networks:
    rede:
      driver: bridge
      ipam:
        config:
           - subnet: 172.20.0.0/24